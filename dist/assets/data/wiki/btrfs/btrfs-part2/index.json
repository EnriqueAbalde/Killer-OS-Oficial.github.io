{"hash":"8cdcb24eb6b965aabc424dc02a3705a76aba031a","data":{"markdownPage":{"id":"e38deb84d481f0a4d28f881f87c6fc3f","title":"Btrfs перенос","description":"Мануал по восстановлению Arch Linux на btrfs.","date":null,"date_up":"13.08.2020","path":"/wiki/btrfs/btrfs-part2/","timeToRead":5,"content":"<h1 id=\"btrfs-перенос-восстановление\"><a href=\"#btrfs-%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%BE%D1%81-%D0%B2%D0%BE%D1%81%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Btrfs перенос, восстановление</h1>\n<div class=\"responsive-container\">\n  <iframe class=\"responsive-iframe w-full h-full top-0 left-0 border-0\" src=\"https://www.youtube.com/embed/97ui81gWUcU\" style=\"border:0;\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n</div>\n<h2 id=\"перенос-на-раздел-btrfs-rsync\"><a href=\"#%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%BE%D1%81-%D0%BD%D0%B0-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB-btrfs-rsync\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Перенос на раздел btrfs, rsync</h2>\n<pre class=\"language-bash\"><code class=\"language-bash\">pacman -S <span class=\"token function\">rsync</span> btrfs-progs arch-install-scripts</code></pre>\n<p><code>lsblk</code> - подсветить все разделы что бы определиться что монтировать.</p>\n<p>При необходимости разбить диск, -z говорит обнулить таблицу разделов.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cfdisk</span> -z /dev/sda</code></pre>\n<p>Монтируем.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/sda6 /mnt</code></pre>\n<p>Создадим три подтома root, домашний каталог пользователя и подтом для хранения.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs subvolume create /mnt/@_root\nbtrfs subvolume create /mnt/@_home\nbtrfs subvolume create /mnt/@_snapshots\n\nbtrfs subvolume list /mnt</code></pre>\n<p>Для переноса смонтируйте резервную систему и перенесите ее.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /mnt/dump\n<span class=\"token function\">mount</span> /dev/sdb1 /mnt/dump</code></pre>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> -avAXHP --delete --delete-excluded --exclude<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/dev/*\"</span>,<span class=\"token string\">\"/proc/*\"</span>,<span class=\"token string\">\"/sys/*\"</span>,<span class=\"token string\">\"/tmp/*\"</span>,<span class=\"token string\">\"/run/*\"</span>,<span class=\"token string\">\"/mnt/*\"</span>,<span class=\"token string\">\"/media/*\"</span>,<span class=\"token string\">\"/lost+found\"</span>,<span class=\"token string\">\"/var/lib/pacman/sync/*\"</span>,<span class=\"token string\">\"/var/cache/*\"</span>,<span class=\"token string\">\"/var/tmp/*\"</span>,<span class=\"token string\">\"/boot/*\"</span>,<span class=\"token string\">\"/home/*\"</span><span class=\"token punctuation\">}</span> /mnt/dump/@/* /mnt/@_root/</code></pre>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rsync</span> -avAXHP --delete --delete-excluded --exclude<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"/dev/*\"</span>,<span class=\"token string\">\"/proc/*\"</span>,<span class=\"token string\">\"/sys/*\"</span>,<span class=\"token string\">\"/tmp/*\"</span>,<span class=\"token string\">\"/run/*\"</span>,<span class=\"token string\">\"/mnt/*\"</span>,<span class=\"token string\">\"/media/*\"</span>,<span class=\"token string\">\"/lost+found\"</span>,<span class=\"token string\">\"/var/lib/pacman/sync/*\"</span>,<span class=\"token string\">\"/var/cache/*\"</span>,<span class=\"token string\">\"/var/tmp/*\"</span>,<span class=\"token string\">\"/boot/*\"</span>,<span class=\"token string\">\"/home/*\"</span><span class=\"token punctuation\">}</span> /mnt/dump/@home/* /mnt/@_home/</code></pre>\n<p>И отмонтируем корень ФС.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> /mnt\n<span class=\"token function\">rm</span> -rf /mnt/dump</code></pre>\n<p>Чтобы монтировать подтом подобно обычному разделу диска, команде mount нужно указывать опцию subvol=PATH. PATH - путь относительно корня ФС. Монтируем корень. Сжатие zstd, или lzo.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -o <span class=\"token assign-left variable\">subvol</span><span class=\"token operator\">=</span>@,compress<span class=\"token operator\">=</span>zstd /dev/sda6 /mnt</code></pre>\n<p>Какие рекомендуемые варианты для установки на SD-карту, или медленный SSD-накопитель? В <code>/etc/fstab</code> См. <a href=\"https://wiki.debian.org/Btrfs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://wiki.debian.org/Btrfs</a>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">/dev/sdaX / btrfs x-systemd.device-timeout<span class=\"token operator\">=</span><span class=\"token number\">0</span>,noatime,compress<span class=\"token operator\">=</span>lzo,commit<span class=\"token operator\">=</span><span class=\"token number\">0</span>,ssd_spread,autodefrag <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n\n<span class=\"token assign-left variable\">UUID</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>the_device_uuid<span class=\"token operator\">></span> /mount/point/ btrfs noauto,compress<span class=\"token operator\">=</span>lzo,noatime,autodefrag <span class=\"token number\">0</span> <span class=\"token number\">0</span></code></pre>\n<p>Создаём директорию и монтируем в неё наш будущий каталог пользователей, если boot раздел отдеольно, нужно его тоже смонтироват в <code>/mnt/boot</code>.</p>\n<p>Если нужно <code>mkdir /mnt/home</code>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -o <span class=\"token assign-left variable\">subvol</span><span class=\"token operator\">=</span>@home,compress<span class=\"token operator\">=</span>zstd /dev/sda6 /mnt/home</code></pre>\n<p>Если нужно <code>mkdir /mnt/snapshots</code>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -o <span class=\"token assign-left variable\">subvol</span><span class=\"token operator\">=</span>@snapshots,compress<span class=\"token operator\">=</span>zstd /dev/sda6 /mnt/snapshots\n\n<span class=\"token function\">mount</span> -t proc none /mnt/proc\n<span class=\"token function\">mount</span> -t sysfs none /mnt/sys\n<span class=\"token function\">mount</span> -o <span class=\"token builtin class-name\">bind</span> /dev /mnt/dev\n\n<span class=\"token function\">cp</span> -L /etc/resolv.conf /mnt/etc\n\n<span class=\"token function\">swapon</span> /dev/sda3</code></pre>\n<p>Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> /swap             <span class=\"token comment\"># создаем пустой файл /swap</span>\n<span class=\"token function\">chmod</span> go-r /swap        <span class=\"token comment\"># swap должен иметь права 600</span>\nchattr +C /swap         <span class=\"token comment\"># отключаем COW, сжатие тоже отключается</span>\nfallocate /swap -l4g    <span class=\"token comment\"># файл 4Gb</span>\n<span class=\"token function\">mkswap</span> /swap\n<span class=\"token function\">swapon</span> /swap</code></pre>\n<p>Теперь нужно проинициализировать систему. Редактируем FSTAB, или запускаем genfstab.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /mnt/etc/fstab\ngenfstab -pU /mnt <span class=\"token operator\">></span> /mnt/etc/fstab</code></pre>\n<p>Переходим в нашу новую систему.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chroot</span> /mnt /bin/bash</code></pre>\n<p>Генерация initramfs с помощью mkinicpio.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">mkinitcpio -p linux</code></pre>\n<p>Установить загрузчик GRUB2 и сконфигурировать его.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">grub-install /dev/sdХ\n<span class=\"token function\">grub-mkconfig</span> -o /boot/grub/grub.cfg</code></pre>\n<p><code>exit</code> или \"Ctrl + D\" выйти из chroot.</p>\n<p>Теперь  нужно все размонтировать.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> /mnt/home\n<span class=\"token function\">umount</span> /mnt/snapshots\n<span class=\"token function\">umount</span> /mnt\nreeboot</code></pre>\n<hr>\n<h2 id=\"снапшот-на-другой-разделдиск\"><a href=\"#%D1%81%D0%BD%D0%B0%D0%BF%D1%88%D0%BE%D1%82-%D0%BD%D0%B0-%D0%B4%D1%80%D1%83%D0%B3%D0%BE%D0%B9-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D0%B4%D0%B8%D1%81%D0%BA\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Снапшот на другой раздел/диск</h2>\n<ul>\n<li><a href=\"https://btrfs.wiki.kernel.org/index.php/Incremental_Backup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Incremental_Backup</a></li>\n<li><a href=\"https://github.com/masc3d/btrfs-sxbackup\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">btrfs-sxbackup</a></li>\n<li><a href=\"https://github.com/YHNdnzj/btrfs-snapshot\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">btrfs-snapshot</a></li>\n</ul>\n<p>Монтируем основной раздел.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /mnt/arch\n<span class=\"token function\">mount</span> /dev/sda6 /mnt/arch</code></pre>\n<p>Монтируем раздел/диск для сброса снапшота.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> /mnt/dump\n<span class=\"token function\">mount</span> /dev/sda8 /mnt/dump</code></pre>\n<p>Нужно создавать снапшоты, только для чтения(readonly), требует <code>send</code>. Для отправки на другие узлы.</p>\n<blockquote>\n<p>Сбрасываем все из кэша на диск <code>sync</code>, ВАЖНО.</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP\n<span class=\"token function\">sync</span>\nbtrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP\n<span class=\"token function\">sync</span></code></pre>\n<p>Переносим снапшоты. Можно send в файл <code>btrfs send /mnt/arch/@_BACKUP -f /dump.sn</code>, receive из файла <code>btrfs receive /mnt/dump/ -f /dump.sn</code>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs send /mnt/arch/@_BACKUP <span class=\"token operator\">|</span> btrfs receive /mnt/dump/\nbtrfs send /mnt/arch/@home_BACKUP <span class=\"token operator\">|</span> btrfs receive /mnt/dump/</code></pre>\n<p>Инкрементальные readonly снимки.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs subvolume snapshot -r /mnt/arch/@ /mnt/arch/@_BACKUP_new\n<span class=\"token function\">sync</span>\nbtrfs subvolume snapshot -r /mnt/arch/@home /mnt/arch/@home_BACKUP_new\n<span class=\"token function\">sync</span></code></pre>\n<p>Создаём разность между снимками.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs send -p /mnt/arch/@_BACKUP /mnt/arch/@_BACKUP_new <span class=\"token operator\">|</span> btrfs receive /mnt/dump/\nbtrfs send -p /mnt/arch/@home_BACKUP /mnt/arch/@home_BACKUP_new <span class=\"token operator\">|</span> btrfs receive /mnt/dump/</code></pre>\n<p>Просмотрим листинг.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs subvolume list /mnt/dump</code></pre>\n<h3 id=\"отправка-по-ssh\"><a href=\"#%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B0-%D0%BF%D0%BE-ssh\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Отправка по ssh</h3>\n<p>Локально: генерируем ключи, создаём <code>~/.ssh/config</code>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># генерация пары ключий, публичный(отправляем на сервер)</span>\n<span class=\"token comment\"># id_rsa.pub</span>\nssh-keygen -t rsa -b <span class=\"token number\">4096</span> -C <span class=\"token string\">\"lol@gmail.com\"</span>\n\n<span class=\"token comment\"># nano ~/.ssh/config</span>\nHost office\n    HostName <span class=\"token number\">192.168</span>.100.51\n    Port <span class=\"token number\">22</span>\n    User <span class=\"token builtin class-name\">test</span></code></pre>\n<pre class=\"language-bash\"><code class=\"language-bash\">PasswordAuthentication <span class=\"token function\">yes</span>                 <span class=\"token comment\"># на сервере /etc/ssh/sshd_config</span>\nsystemctl restart sshd\nssh-copy-id -i ~/.ssh/id_rsa.pub office    <span class=\"token comment\"># отправка ключа на сервер</span>\n<span class=\"token comment\"># на сервере /etc/ssh/sshd_config</span>\nPermitRootLogin no\nPasswordAuthentication no                  <span class=\"token comment\"># отключим доступ по паролю, всем.</span>\nPubkeyAuthentication <span class=\"token function\">yes</span>\nAuthorizedKeysFile .ssh/authorized_keys\nsystemctl restart sshd\nsystemctl <span class=\"token builtin class-name\">enable</span> sshd\n\nbtrfs send /mnt/arch/@_BACKUP <span class=\"token operator\">|</span> <span class=\"token function\">ssh</span> office <span class=\"token string\">\"btrfs receive /mnt/backups\"</span>\n<span class=\"token comment\"># или</span>\nbtrfs send /mnt/arch/@_BACKUP <span class=\"token operator\">|</span> <span class=\"token function\">ssh</span> -p <span class=\"token number\">22</span> test@192.168.100.51 <span class=\"token string\">\"btrfs receive /mnt/backups\"</span></code></pre>\n<p>Пример скрипта - инкрементальный, взято с (ubuntu.ru/wiki).</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\"># точки монтирования</span>\n<span class=\"token assign-left variable\">src</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp -d <span class=\"token string\">\"<span class=\"token variable\">${TMPDIR<span class=\"token operator\">:-</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>}</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token number\">0</span><span class=\"token variable\">)</span></span>.XXXXXXXXXXXX\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token assign-left variable\">dst</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span>mktemp -d <span class=\"token string\">\"<span class=\"token variable\">${TMPDIR<span class=\"token operator\">:-</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>}</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">basename</span> <span class=\"token number\">0</span><span class=\"token variable\">)</span></span>.XXXXXXXXXXXX\"</span><span class=\"token variable\">)</span></span>\n<span class=\"token comment\">#монтируем</span>\n<span class=\"token function\">mount</span> /dev/sda2 <span class=\"token variable\">$src</span>\n<span class=\"token function\">mount</span> /dev/sdb2 <span class=\"token variable\">$dst</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> -e <span class=\"token variable\">$src</span>/root_BCKP <span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">then</span> <span class=\"token comment\"># первый запуск полный бекап</span>\n  <span class=\"token comment\"># Создаем снимок read-only</span>\n  btrfs subvolume snapshot -r <span class=\"token variable\">$src</span>/@ <span class=\"token variable\">$src</span>/root_BCKP\n  <span class=\"token function\">sync</span>\n  <span class=\"token comment\"># переносим</span>\n  btrfs send <span class=\"token variable\">$src</span>/root_BCKP <span class=\"token operator\">|</span> btrfs receive <span class=\"token variable\">$dst</span>/\n<span class=\"token keyword\">else</span> <span class=\"token comment\"># повторный запуск, инкрементальный</span>\n  <span class=\"token comment\"># Переименовываем</span>\n  <span class=\"token function\">mv</span> <span class=\"token variable\">$src</span>/root_BCKP <span class=\"token variable\">$src</span>/root_BCKP_prev\n  <span class=\"token function\">mv</span> <span class=\"token variable\">$dst</span>/root_BCKP <span class=\"token variable\">$dst</span>/root_BCKP_prev\n  <span class=\"token comment\"># Создаем текущий</span>\n  btrfs subvolume snapshot -r <span class=\"token variable\">$src</span>/@ <span class=\"token variable\">$src</span>/root_BACKUP\n  <span class=\"token function\">sync</span>\n  <span class=\"token comment\"># инкрементальный бекап</span>\n  btrfs send -p <span class=\"token variable\">$src</span>/root_BCKP_prev <span class=\"token variable\">$src</span>/root_BACKUP <span class=\"token operator\">|</span> btrfs receive <span class=\"token variable\">$dst</span>/\n<span class=\"token keyword\">fi</span>\n<span class=\"token comment\"># В $dst/root_BACKUP копия корня.</span>\n<span class=\"token function\">umount</span> <span class=\"token variable\">$src</span>\n<span class=\"token function\">umount</span> <span class=\"token variable\">$dst</span>\n<span class=\"token comment\"># Удаляем точки монтирования</span>\n<span class=\"token function\">rmdir</span> <span class=\"token variable\">$src</span>\n<span class=\"token function\">rmdir</span> <span class=\"token variable\">$dst</span></code></pre>\n<blockquote>\n<p>Всё это работает и в обратном порядке.</p>\n</blockquote>\n<p>Удаляем или переименовываем <code>mv</code>.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs subvolume delete /mnt/dump/@_BACKUP\nbtrfs subvolume delete /mnt/dump/@home_BACKUP</code></pre>\n<p>Переименовываем новые snapshot(ы).</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> /mnt/dump/@_BACKUP_new /mnt/dump/@\n<span class=\"token function\">mv</span> /mnt/dump/@home_BACKUP_new /mnt/dump/@home</code></pre>\n<blockquote>\n<p>Свойства. Сейчас они в ro - read-only(только чтение), изменим на rw - read-write(чтение-завись). Значения изменяются так: <code>ro true</code>, <code>ro false</code>.</p>\n</blockquote>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs property get /mnt/dump/@        <span class=\"token comment\"># посмотр свойств</span>\n\nbtrfs property <span class=\"token builtin class-name\">set</span> /mnt/dump/@ ro <span class=\"token boolean\">false</span>\nbtrfs property <span class=\"token builtin class-name\">set</span> /mnt/dump/@home ro <span class=\"token boolean\">false</span>\n\nbtrfs subvolume show /mnt/dump/@      <span class=\"token comment\"># информация</span></code></pre>\n<p>Удаляем, если нужно.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">btrfs subvolume delete /mnt/arch/@_BACKUP\nbtrfs subvolume delete /mnt/arch/@home_BACKUP</code></pre>\n<p>Отмонтируем.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> /mnt/arch\n<span class=\"token function\">umount</span> /mnt/dump\n\n<span class=\"token function\">rmdir</span> /mnt/<span class=\"token punctuation\">{</span>arch,dump<span class=\"token punctuation\">}</span></code></pre>\n<blockquote>\n<p>Восстановление, как и выше, грузимся с live-usb, или с другой системы. Монтируем раздел для восстановления, поврежденный и раздел с backup, восстанавливаем снапшоты.</p>\n</blockquote>\n<p>Монтируем файловую систему, для пересоздания fstab и инициализации.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -o <span class=\"token assign-left variable\">subvol</span><span class=\"token operator\">=</span>@,compress<span class=\"token operator\">=</span>zstd /dev/sda8 /mnt\n<span class=\"token function\">ls</span> /mnt\n<span class=\"token function\">mount</span> -o <span class=\"token assign-left variable\">subvol</span><span class=\"token operator\">=</span>@home,compress<span class=\"token operator\">=</span>zstd /dev/sda8 /mnt/home</code></pre>\n<p>Если boot раздел отдеольно, то нужно его тоже смонтироват в /mnt/boot и все другие subvolume.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> /dev/sda2 /mnt/boot\n\n<span class=\"token function\">mount</span> -t proc none /mnt/proc\n<span class=\"token function\">mount</span> -t sysfs none /mnt/sys\n<span class=\"token function\">mount</span> -o <span class=\"token builtin class-name\">bind</span> /dev /mnt/dev\n\n<span class=\"token function\">cp</span> -L /etc/resolv.conf /mnt/etc\n\n<span class=\"token function\">swapon</span> /dev/sda3</code></pre>\n<p>Начиная с ядра 5.0 можно создать swap-файл, swap-файл должен располагаться целиком на одном устройстве, создаваться с отключенным COW и сжатием.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> /swap             <span class=\"token comment\"># создаем пустой файл /swap</span>\n<span class=\"token function\">chmod</span> go-r /swap        <span class=\"token comment\"># swap должен иметь права 600</span>\nchattr +C /swap         <span class=\"token comment\"># отключаем COW, сжатие тоже отключается</span>\nfallocate /swap -l4g    <span class=\"token comment\"># файл 4Gb</span>\n<span class=\"token function\">mkswap</span> /swap\n<span class=\"token function\">swapon</span> /swap</code></pre>\n<p>Редактируем FSTAB, или запускаем genfstab.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> /mnt/etc/fstab\ngenfstab -pU /mnt <span class=\"token operator\">></span> /mnt/etc/fstab\n\n<span class=\"token function\">nano</span> /mnt/etc/fstab</code></pre>\n<p>Переходим в нашу новую систему.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chroot</span> /mnt</code></pre>\n<p>Или zsh.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">chroot</span> /mnt /bin/zsh</code></pre>\n<p>Перегенерироваь.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">mkinitcpio -p linux</code></pre>\n<p>Установить загрузчик GRUB2 и сконфигурировать его.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">grub-install /dev/sdХ\n<span class=\"token function\">grub-mkconfig</span> -o /boot/grub/grub.cfg</code></pre>\n<p>Инициализируем ключи и обновим, если требуется.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">pacman-key --init <span class=\"token operator\">&amp;&amp;</span> pacman-key --populate <span class=\"token operator\">&amp;&amp;</span> pacman-key --refresh-keys <span class=\"token operator\">&amp;&amp;</span> pacman -Syy</code></pre>\n<p><code>exit</code> или \"Ctrl + D\" выйти из chroot.</p>\n<p>Теперь  нужно все размонтировать.</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> -R /mnt\nreeboot</code></pre>\n<blockquote>\n<p>Ещё больше разжёвано на <a href=\"https://help.ubuntu.ru/wiki/btrfs\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ubuntu.ru/wiki</a>.</p>\n</blockquote>\n","sidebar":"wiki","next":"","prev":"/wiki/btrfs/btrfs-part1/","headings":[{"depth":1,"value":"Btrfs перенос, восстановление","anchor":"#btrfs-перенос-восстановление"},{"depth":2,"value":"Перенос на раздел btrfs, rsync","anchor":"#перенос-на-раздел-btrfs-rsync"},{"depth":2,"value":"Снапшот на другой раздел/диск","anchor":"#снапшот-на-другой-разделдиск"},{"depth":3,"value":"Отправка по ssh","anchor":"#отправка-по-ssh"}]},"allMarkdownPage":{"edges":[{"node":{"path":"/wiki/changelog/bspwm-0-3-1/","title":"Bspwm v0.3.1"}},{"node":{"path":"/wiki/changelog/xfce-1-8-0/","title":"Xfce v1.8.0"}},{"node":{"path":"/wiki/changelog/openbox-1-3-0/","title":"Openbox v1.3.0"}},{"node":{"path":"/wiki/changelog/bspwm-0-1-0/","title":"Bspwm v0.1.0"}},{"node":{"path":"/wiki/changelog/xfce-1-6-0/","title":"Xfce v1.6.0"}},{"node":{"path":"/wiki/changelog/openbox-1-2-0/","title":"Openbox v1.2.0"}},{"node":{"path":"/wiki/changelog/i3-1-0-0/","title":"I3 v1.0.0"}},{"node":{"path":"/wiki/changelog/xfce-1-5-0/","title":"Xfce v1.5.0"}},{"node":{"path":"/wiki/changelog/xfce-1-4-0/","title":"Xfce v1.4.0"}},{"node":{"path":"/wiki/changelog/bspwm-0-0-1/","title":"Bspwm v0.0.1"}},{"node":{"path":"/wiki/changelog/xfce-1-3-0/","title":"Xfce v1.3.0"}},{"node":{"path":"/wiki/changelog/openbox-2-1/","title":"Openbox,i3 v2.1"}},{"node":{"path":"/wiki/changelog/xfce-1-2-0/","title":"Xfce v1.2.0"}},{"node":{"path":"/wiki/changelog/xfce-1-1-0/","title":"Xfce v1.1.0"}},{"node":{"path":"/wiki/changelog/openbox-2-2/","title":"Openbox,i3 v2.2"}},{"node":{"path":"/wiki/changelog/openbox-2-0-0/","title":"Openbox,i3 v2.0.0"}},{"node":{"path":"/wiki/changelog/openbox-1-0-0/","title":"Openbox v1.0.0"}},{"node":{"path":"/wiki/changelog/xfce-1-0-0/","title":"Xfce v1.0.0"}},{"node":{"path":"/wiki/changelog/default/","title":"Xfce v1.0.0"}},{"node":{"path":"/wiki/wm/bspwm/","title":"Ctlos Bspwm"}},{"node":{"path":"/wiki/packages/other-pkg/","title":"Доп. программы"}},{"node":{"path":"/wiki/packages/iwd/","title":"Iwd wifi"}},{"node":{"path":"/wiki/other/screencast/","title":"Screencast"}},{"node":{"path":"/wiki/other/notes/","title":"Заметки"}},{"node":{"path":"/wiki/other/grub-uefi/","title":"Grub UEFI"}},{"node":{"path":"/wiki/other/gnupg/","title":"Gnupg"}},{"node":{"path":"/wiki/other/git-start/","title":"Git Start"}},{"node":{"path":"/wiki/other/ctlosiso/","title":"Ctlos iso"}},{"node":{"path":"/wiki/install/pkg-manager/","title":"Менеджеры пакетов"}},{"node":{"path":"/wiki/install/next-install/","title":"После установки"}},{"node":{"path":"/wiki/install/install-ctlos/","title":"Установка Ctlos"}},{"node":{"path":"/wiki/install/ctlos-repo/","title":"Репозиторий ctlos"}},{"node":{"path":"/wiki/config/videocfg/","title":"Видео драйвера"}},{"node":{"path":"/wiki/config/trouble/","title":"Решение проблем"}},{"node":{"path":"/wiki/config/ssh/","title":"Настройка ssh"}},{"node":{"path":"/wiki/config/recomend/","title":"Рекомендации"}},{"node":{"path":"/wiki/config/autologin/","title":"Автологин"}},{"node":{"path":"/wiki/changelog/","title":"Changelog"}},{"node":{"path":"/wiki/backup/netcat/","title":"Netcat, ssh, rsync"}},{"node":{"path":"/wiki/btrfs/btrfs-part2/","title":"Btrfs перенос"}},{"node":{"path":"/wiki/btrfs/btrfs-part1/","title":"Instalación de btrfs"}},{"node":{"path":"/wiki/backup/timeshift-rsync/","title":"Timeshift, rsync"}},{"node":{"path":"/wiki/backup/squashfs/","title":"Squashfs"}},{"node":{"path":"/wiki/whois/","title":"Brevemente sobre Killer-OS Linux"}},{"node":{"path":"/wiki/","title":"Killer-OS Linux Wiki"}}]}},"context":{}}